<div class="header-page-width">
  {% render 'breadcrumbs' %}     
</div>  
<div class="product-template__container product-page-width"
     id="ProductSection-{{ section.id }}"
     data-section-id="{{ section.id }}"
     data-section-type="product"
     data-enable-history-state="true"
     data-ajax-enabled="{{ settings.enable_ajax }}"
     >
  {% comment %}
  Get first variant, or deep linked one
  {% endcomment %}
  {%- assign current_variant = product.selected_or_first_available_variant -%}
  {%- assign product_image_zoom_size = '1024x1024' -%}
  {%- assign product_image_scale = '2' -%}
  {%- assign enable_image_zoom = section.settings.enable_image_zoom -%}
  {%- assign compare_at_price = current_variant.compare_at_price -%}
  {%- assign price = current_variant.price -%}

  {% case section.settings.media_size %}
  {% when 'small' %}
  {%- assign product_media_width = 'medium-up--one-third' -%}
  {%- assign product_description_width = 'medium-up--two-thirds' -%}
  {%- assign height = 345 -%}
  {% when 'medium' %}
  {%- assign product_media_width = 'medium-up--one-half' -%}
  {%- assign product_description_width = 'medium-up--one-half' -%}
  {%- assign height = 530 -%}
  {% when 'large' %}
  {%- assign product_media_width = 'medium-up--two-thirds' -%}
  {%- assign product_description_width = 'medium-up--one-third' -%}
  {%- assign height = 720 -%}
  {% when 'full' %}
  {%- assign product_media_width = '' -%}
  {%- assign product_description_width = '' -%}
  {%- assign height = 1090 -%}
  {%- assign enable_image_zoom = false -%}
  {% endcase %}
  
  


  <div class="grid product-single{% if section.settings.enable_payment_button %} product-single--{{ section.settings.media_size }}-media{% endif %}">
    <div class="grid__item product-single__media-group {{ product_media_width }}{% if section.settings.media_size == 'full' %} product-single__media-group--full{% endif %} product-img" data-product-single-media-group>
      {%- assign featured_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media -%}

      {%- for media in product.media -%}
      {% include 'media', media: media, featured_media: featured_media, height: height, enable_image_zoom: enable_image_zoom, image_zoom_size: product_image_zoom_size, image_scale: product_image_scale %}
      {%- endfor -%}

      <noscript>
        {% capture product_image_size %}{{ height }}x{% endcapture %}
        <img src="{{ featured_media | img_url: product_image_size, scale: product_image_scale }}" alt="{{ featured_media.alt }}" id="FeaturedMedia-{{ section.id }}" class="product-featured-media" style="max-width: {{ height }}px;">
      </noscript>

      {% assign first_3d_model = product.media | where: "media_type", "model" | first %}

      {%- if first_3d_model -%}
      <button
              aria-label="{{ 'products.product.view_in_space_label' | t }}"
              class="product-single__view-in-space"
              data-shopify-xr
              data-shopify-model3d-id="{{ first_3d_model.id }}"
              data-shopify-title="{{ product.title | escape }}"
              data-shopify-xr-hidden
              >
        {% include 'icon-3d-badge-full-color' %}<span class='product-single__view-in-space-text'>{{ 'products.product.view_in_space' | t }}</span>
      </button>
      {%- endif -%}


      {% if product.media.size > 1 %}
      {% if product.media.size > 4 %}
      {%- assign enable_thumbnail_slides = true -%}
      {% endif %}
      
      
      <div data-thumbnail-slider>
        <div class="thumbnails-wrapper slider-active" data-slider>
          {% if enable_thumbnail_slides == true %}
          <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__prev thumbnails-slider__prev--{{ section.id }}" data-slider-button>
            {% include 'icon-chevron-left' %}
            <span class="icon__fallback-text">{{ 'sections.slideshow.previous_slide' | t }}</span>
          </button>
          {% endif %}

          <ul class="product-single__thumbnails product-single__thumbnails-{{ section.id }}" data-slider-container>

            <div class="product-single__thumbnails-slider-track" data-slider-track>


              {% for media in product.media %}
              <li class="product-single__thumbnails-item product-single__thumbnails-item--{{ section.settings.media_size }} {% if enable_thumbnail_slides == true %} product-single__thumbnails-item-slide{% endif %} js"{% if enable_thumbnail_slides == true %} data-slider-slide-index="{{ forloop.index0 }}" data-slider-item{% endif %}>
                <a href="{{ media.preview_image | img_url: product_image_zoom_size, scale: product_image_scale }}"
                   class="text-link product-single__thumbnail product-single__thumbnail--{{ section.id }}"
                   data-thumbnail-id="{{ section.id }}-{{ media.id }}"
                   {% if enable_thumbnail_slides == true %} data-slider-item-link{% endif %}
                   {% if enable_image_zoom %}data-zoom="{{ media.preview_image | img_url: product_image_zoom_size, scale: product_image_scale }}"{% endif %}>

                  {%- capture thumbnailAlt -%}
                  {%- if media.media_type == 'video' or media.media_type == 'external_video' -%}
                  {{ 'sections.featured_product.video_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                  {%- elsif media.media_type == 'model' -%}
                  {{ 'sections.featured_product.model_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                  {%- else -%}
                  {{ 'sections.featured_product.gallery_thumbnail_alt' | t: imageAlt: media.alt | escape }}
                  {%- endif -%}
                  {%- endcapture -%}

                  <img class="product-single__thumbnail-image" src="{{ media.preview_image | img_url: '110x110', scale: 2 }}" data-image="{{ media.preview_image | img_url:''}}" alt="{{ thumbnailAlt }}">
                  {%- if media.media_type == 'video' or media.media_type =='external_video' -%}
                  <div class="product-single__thumbnail-badge">
                    {% include 'icon-video-badge-full-color' %}
                  </div>
                  {%- endif -%}
                  {%- if media.media_type == 'model' -%}
                  <div class="product-single__thumbnail-badge">
                    {% include 'icon-3d-badge-full-color' %}
                  </div>
                  {%- endif -%}
                </a>
              </li>
              {% endfor %}

              {% if enable_thumbnail_slides == true %}
            </div>
            {% endif %}
          </ul>
          {% if enable_thumbnail_slides == true %}
          <button type="button" class="btn btn--link medium-up--hide thumbnails-slider__btn thumbnails-slider__next thumbnails-slider__next--{{ section.id }}" data-slider-button data-slider-button-next>
            {% include 'icon-chevron-right' %}
            <span class="icon__fallback-text">{{ 'sections.slideshow.next_slide' | t }}</span>
          </button>
          {% endif %}
        </div>
      </div>
      {% endif %}
    </div>

    <div class="grid__item {{ product_description_width }} product-description">
      <div class="product-single__meta">

        <h1 class="product-single__title">{{ product.title }}</h1>
        <script>window.performance.mark('debut:product:title_visible');</script>

        <div class="product__price">
          {% include 'product-price', variant: current_variant, show_vendor: section.settings.show_vendor %}
        </div>

        {% if customer %}<span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>  {%- endif -%}

        {%- if shop.taxes_included or shop.shipping_policy.body != blank -%}
        <div class="product__policies rte" data-product-policies>
          {%- if shop.taxes_included -%}
          {{ 'products.product.include_taxes' | t }}
          {%- endif -%}
          {%- if shop.shipping_policy.body != blank -%}
          {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
          {%- endif -%}
        </div>
        {%- endif -%}

        {% capture "form_classes" -%}
        product-form product-form-{{ section.id }}
        {%- if section.settings.enable_payment_button and product.has_only_default_variant %} product-form--payment-button-no-variants {%- endif -%}
        {%- if current_variant.available == false %} product-form--variant-sold-out {%- endif -%}
        {%- endcapture %}

        {% form 'product', product, class:form_classes, novalidate: 'novalidate', data-product-form: '' %} 
        
        <div class="custom-color-option">
          {% for option in product.options %}
          {% if option == 'Color' %}         

          {% assign index = forloop.index0 %}
          {% assign colorlist = '' %}
          {% assign color = '' %}

          {% for variant in product.variants %}

          {% capture color %}
          {{ variant.options[index] }}
          {% endcapture %}

          {% unless colorlist contains color %}	

          {% if variant.available %}
          <div id="{{ variant.id }}" title="{{ variant.title }}-In Stock" class="color-option-item instock pro-varaint-color">
            <p style="background:{{ color | downcase }}" ><span class="visually-hidden">{{ color | captialise }}</span></p>
          </div>
          {% else %}
          <div id="{{ variant.id }}" title="{{ variant.title }}-Out of Stock" class="outstock pro-varaint-color" >
            <p style="background:{{ color | downcase }}" ><span class="visually-hidden">{{ color | captialise }}</span></p>
          </div>
          {% endif %}

          {% capture tempList %}
          {{colorlist | append: color | append: " " }}
          {% endcapture %}
          {% assign colorlist = tempList %}
          {% endunless %}
          {% endfor %}
          {% endif %}
          {% endfor %}
        </div>        


        {% if product.variants.size > 1 %}
        <table class="product-tabel">
          <tr>
            <td colspan="5" style="text-align: right;">
              <input type="number" name="change_qty_all" id="change_qty_all" style="width:70px" min="1" />
            </td>
          </tr>
          <tr>
            <th>
              {% for clr_option in product.options_with_values %}
              {% assign name_val = clr_option.name | downcase %}
              {% if name_val == 'color'%}
              <span class="{{ name_val }}"> {{ name_val | capitalize }} </span>
              {% endif %}
              {% endfor %}
            </th>
            <span id="opt" style="display: none;">{{product.metafields.custom.product_sizes}}</span>
            <th class="sizename" id="sizename">       
              {% assign beatles = product.metafields.custom.product_sizes | split: "||" %}
              
              {% for size in beatles %}
                <span id="option{{forloop.index}}"> {{size}}</span>
              {% endfor %}

              {% for size_option in product.options_with_values %}
              {% assign size_val = size_option.name | downcase %}
              {% if size_val == 'size'%}
              {% for value in size_option.values %}
              {% assign cnt_size = cnt_size | plus:1 %}
              <span class="{{ value }}"> {{ value }} </span>
              {% endfor %}
              {% endif %}
              {% endfor %}
            </th>
            <th>Pack</th>
            <th style=" padding: 0 35px; ">Qty</th>
            <th>Amount</th>
          </tr>

          {% assign variant_option2 = '' %}
          {% for variant_cstm in product.options_with_values %}
          {% assign option-name = variant_cstm.name | downcase %}
          {% if option-name == 'color' %}
          {% for value in variant_cstm.values %}
          {% assign temp = value | append:'||' %}
          {% unless variant_option2 contains temp %}
          {% assign variant_option2 = variant_option2 | append:temp %}
          {% endunless %}
          {% endfor %}
          {% endif %}
          {% endfor %}
          
          {% assign variant_id = '' %}
          {% assign variant_title = '' %}
          {% for variant in product.variants %}
          {% assign tempid = variant.id | append:'||' %}
          {% assign temptitle = variant.title | append:'||' %}
          {% unless variant_id contains tempid %}
          {% assign variant_id = variant_id | append:tempid %}
          {% endunless %}
          {% unless variant_title contains temptitle %}
          {% assign variant_title = variant_title | append:temptitle %}
          {% endunless %}
          {% endfor %}
          
           {% assign option_title = variant_title | split:  "||" %}
          {% assign option_id = variant_id | split:  "||" %}            
          {% assign clr_name = variant_option2 | split:  "||" %}            
          {% for currency in shop.enabled_currencies %}
          {% assign currency_symbol = currency.symbol %}
          {% endfor %}          
                 
            
          
          {% for clr_name_show in clr_name %}
          {% assign cnt_class_num = cnt_class_num | plus:1 %}
          <tr class="row_{{ cnt_class_num }}">
            <td class="{{ clr_name_show }}">{{ clr_name_show }}</td>
            <td class="row_size_td"> 
              {% for size_option_inner in product.options_with_values %}
                {% assign size_val_inner = size_option_inner.name | downcase %}
                             
                    {% for value_inner in size_option_inner.values %}  
      
                        {% for variant in product.variants %}
                            
                            {% if variant.title contains clr_name_show and variant.title contains value_inner %}
                  
                              <span style="display:none;" class="row_size_span_money money buckscc-converted buckscc-money" {{ variant.price}}>{{ variant.price | divided_by: 100.00 }}</span>
                              <span style="display:none;" class="row_size_span" const-qty="{{variant.metafields.my_fields.pack_quantity}}" data-wtd-price="{{ variant.price }}" data-wtd-max-qty="{{ variant.inventory_quantity  }}" data-wtd-name="{{variant.title}}" data-wtd-id="{{variant.id}}" data-wtd-quantity="{{ variant.inventory_quantity }}" >{{variant.metafields.my_fields.pack_quantity}}</span>

                            {% endif %}
                        {% endfor %}               		
                    {% endfor %}
    
              {% endfor %}
            </td> 
            <td class="row_qty_td">
              <input type="number" name="product-pack-quantity" class="row_qty_input" min="0" value="0" data-row="{{ cnt_class_num }}" />
              <p class='error_msg' style='color: #ff0000c7; font-size: 12px; margin: 0; bottom: 0; right: 0; display: none'></p>
            </td>
            <td class="row_units_td">
            {% for size_option_inner in product.options_with_values %}
                {% assign size_val_inner = size_option_inner.name | downcase %}
                    {% for value_inner in size_option_inner.values %}  
                        {% for variant in product.variants %}
                            {% if variant.title contains clr_name_show and variant.title contains value_inner %}
                              <span class="row_units" data-wtd-vari-id="{{variant.id}}">0</span> Units
                            {% endif %}
                        {% endfor %}               		
                    {% endfor %}
              {% endfor %}
            </td>
            <td class="row_price_td"><span class="currency_symbol_wtd">$</span> <span class="row_total">0.00</span></td>
          </tr>
          {% endfor %}
          <tr>

          <tr>
            <td colspan="2">Total</td>
            <td class="total_pack">0</td>
            <td class="total_qty"><span>0</span> Units</td>
            <td class="final_price"><span class="currency_symbol_wtd">$</span><span class="price_total">0.00</span></td>
          </tr>
        </table>      
        {% endif %}
        
        {% comment %}
        {% unless product.has_only_default_variant %}
        <div class="product-form__controls-group">
          {% for option in product.options_with_values %}
          <div class="selector-wrapper js product-form__item">
            <label for="SingleOptionSelector-{{ forloop.index0 }}">
              {{ option.name }}
            </label>
            <select class="single-option-selector single-option-selector-{{ section.id }} product-form__input"
                    id="SingleOptionSelector-{{ forloop.index0 }}"
                    data-index="option{{ forloop.index }}"
                    >
              {% for value in option.values %}
              <option value="{{ value | escape }}"{% if option.selected_value == value %} selected="selected"{% endif %}>{{ value }}</option>
              {% endfor %}
            </select>
          </div>
          {% endfor %}
        </div>
        {% endunless %}
        <select name="id" id="ProductSelect-{{ section.id }}" class="product-form__variants no-js">
          {% for variant in product.variants %}
          <option value="{{ variant.id }}"
                  {%- if variant == current_variant %} selected="selected" {%- endif -%}
                  data-name="{{ variant.title }}">
            {{ variant.title }}  {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                </option>
          {% endfor %}
        </select>
        
        {% endcomment %}

        <div class="product-form__error-message-wrapper product-form__error-message-wrapper--hidden{% if section.settings.enable_payment_button %} product-form__error-message-wrapper--has-payment-button{% endif %}"
             data-error-message-wrapper
             role="alert"
             >
          <span class="visually-hidden">{{ 'general.accessibility.error' | t }} </span>
          {% include 'icon-error' %}
          <span class="product-form__error-message" data-error-message>{{ 'products.product.quantity_minimum_message' | t }}</span>
        </div>

        <div class="product-form__controls-group product-form__controls-group--submit">
          {% comment %}
          <div class="product-form__controls-group quantity-block">
            <div class="product-form__item quantity-box">
              {% comment %}<label for="Quantity-{{ section.id }}">{{ 'products.product.quantity' | t }}</label> {% endcomment %}
              <input type="text" id="Quantity-{{ section.id }}"
                     name="quantity" value="1" min="1" pattern="[0-9]*"
                     class="product-form__input product-form__input--quantity" data-quantity-input
                     >
            </div>
          </div>
          {% endcomment %}
          
          <div class="add-to-cart-block product-form__item product-form__item--submit
                      {%- if section.settings.enable_payment_button %} product-form__item--payment-button {%- endif -%}
                      {%- if product.has_only_default_variant %} product-form__item--no-variants {%- endif -%}"
               >
            <span class="btn product-form__cart-submit wtd_submit_atc">
              <span>
                Add to bag
              </span>
            </span>
            
            <button style="display:none" type="submit" name="add"
                    {% unless current_variant.available %} aria-disabled="true"{% endunless %}
                    aria-label="{% unless current_variant.available %}{{ 'products.product.sold_out' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endunless %}"
                    class="btn product-form__cart-submit{% if section.settings.enable_payment_button and product.selling_plan_groups == empty %} btn--secondary-accent{% endif %}"
                    {% if settings.enable_ajax %}aria-haspopup="dialog"{% endif %}
                    data-add-to-cart>
              <span data-add-to-cart-text>
                {% unless current_variant.available %}
                {{ 'products.product.sold_out' | t }}
                {% else %}
                {{ 'products.product.add_to_cart' | t }}
                {% endunless %}
              </span>
              <span class="hide" data-loader>
                {% include 'icon-spinner' %}
              </span>
            </button>
            {% if section.settings.enable_payment_button %}
            {{ form | payment_button }}
            {% endif %}
          </div>
        </div>
        {% endform %}
      </div>

      {%- comment -%}
      Live region for announcing updated price and availability to screen readers
      {%- endcomment -%}
      <p class="visually-hidden" data-product-status
         aria-live="polite"
         role="status"
         ></p>

      {%- comment -%}
      Live region for announcing that the product form has been submitted and the
      product is in the process being added to the cart
      {%- endcomment -%}
      <p class="visually-hidden" data-loader-status
         aria-live="assertive"
         role="alert"
         aria-hidden="true"
         >{{ 'products.product.loader_label' | t }}</p>

      <div
           class="product-single__store-availability-container"
           data-store-availability-container
           data-product-title="{{ product.title | escape }}"
           data-has-only-default-variant="{{ product.has_only_default_variant }}"
           data-base-url="{{ shop.url }}{{ routes.root_url }}"
           >
      </div>

      <div class="accordion_container">
        <div class="accordion_head up-angle-arrow">Product Details</div>
        <div class="accordion_body">
          {{ product.description }}
        </div>
        <div class="accordion_head">Shipping information</div>
        <div class="accordion_body" style="display: none;">Shipping information
        </div>    
        <div class="accordion_head">Reviews</div>
        <div class="accordion_body" style="display: none;">
          <div id="shopify-product-reviews" data-id="{{product.id}}">{{ product.metafields.spr.reviews }}</div>
        </div>
      </div>
      {% if section.settings.show_share_buttons %}
      {% include 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product.featured_media %}
      {% endif %}
    </div>
  </div>
</div>

{% unless product == empty %}
<script type="application/json" id="ProductJson-{{ section.id }}">
    {{ product | json }}
</script>
<script type="application/json" id="ModelJson-{{ section.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
</script>
{% endunless %}
<style>
.product-tabel th.sizename,.product-tabel td.row_size_td { display: flex; justify-content: space-between;position: relative; }
.product-tabel th.sizename > span, .product-tabel td.row_size_td >span.row_size_span { display: inline-block; width: 35px; text-align: center; font-size: 15px; line-height: 35px; }
td.row_price_td { display: flex; }
</style>
<script>

$(document).ready(function () {
    //toggle the component with class accordion_body
    $(".accordion_head").click(function () {
      if ($('.accordion_body').is(':visible')) {
        $(".accordion_body").slideUp(300);
      }
      if ($(this).next(".accordion_body").is(':visible')) {
        $(this).next(".accordion_body").slideUp(300);
      } else {
        $(this).next(".accordion_body").slideDown(300);
      }
    });

    $('.accordion_head').click(function(){
      $('.accordion_head').not(this).removeClass("up-angle-arrow");
      if ($(this).hasClass('up-angle-arrow')){
        $(this).removeClass('up-angle-arrow'); 
      } else {
        $(this).addClass('up-angle-arrow');
      }

    }); 
});
  

//   $(document).ready(function() {
//     $('.slider-for').slick({
//       slidesToShow: 1,
//       slidesToScroll: 1,
//       arrows: false,
//       fade: true,
//       asNavFor: '.slider-nav'
//     });
//     $('.slider-nav').slick({
//       slidesToShow: 4,
//       slidesToScroll: 1,
//       vertical:true,
//       asNavFor: '.slider-for',
//       dots: false,
//       focusOnSelect: true,
//       verticalSwiping:true,
//       responsive: [
//         {
//           breakpoint: 992,
//           settings: {
//             vertical: false,
//           }
//         },
//         {
//           breakpoint: 768,
//           settings: {
//             vertical: false,
//           }
//         },
//         {
//           breakpoint: 580,
//           settings: {
//             vertical: false,
//             slidesToShow: 3,
//           }
//         },
//         {
//           breakpoint: 380,
//           settings: {
//             vertical: false,
//             slidesToShow: 2,
//           }
//         }
//       ]
//     });
//   });

  
// Thumbnail Images and main product image code start  

var input = document.getElementById('opt').innerText;
let fieldValue = "";
let fieldValue2 ="";
var fields = input.split('||');
var field1 = fields[0];
var realvalue = field1.split('-');
var field2 = fields[1];
var realvalue2 = field2.split('-');
realvalue.forEach((item, index)=>{
  fieldValue += "<span>" + item + "</span>"; 
});
realvalue2.forEach((item, index)=>{
  fieldValue2 += "<a const-qty='"+item+"'>" + item + "</a>"; 
});
document.getElementById("sizename").innerHTML  = fieldValue;

const testing = document.querySelectorAll(".row_size_td");
testing.forEach(element => element.innerHTML += fieldValue2);

$( window ).on( "load", function() {
  
$('.color-option-item').first().addClass("selected");  
  
$('.product-single__thumbnails-item').each(function() {
  
      var alt = $(this).find('img').attr("alt").split(",");
      var altColor = alt.pop();  
      var activeVariant = $('.color-option-item.selected').text();	
      var trimStr_var = $.trim(activeVariant);
      var trimStr_alt = $.trim(altColor);
  
      if(trimStr_alt == trimStr_var){ 
        $(this).show();
      } else {
        $(this).hide();
      }
});  

$( '.color-option-item' ).on( "click", function() {
      $('.color-option-item').not(this).removeClass('selected');
      $(this).addClass('selected');

      $('.product-single__thumbnails-item').each(function() {
        var alt = $(this).find('img').attr("alt").split(",");
        var altColor = alt.pop();
        var activeVariant = $('.color-option-item.selected').text();
        var trimStr_var = $.trim(activeVariant);
        var trimStr_alt = $.trim(altColor);
        
        if(trimStr_alt == trimStr_var){ 
          $(this).show();
          $(this).addClass('new-active');            
         } else {
          $(this).hide();
          $(this).removeClass('new-active');         
        }

        var color_img =  $('.new-active').parent().find('.new-active').first().find('.product-single__thumbnail');
        $(color_img).not(this).removeClass("active-thumb");
        $('.product-single__thumbnail').not(this).removeClass("active-thumb");
       
        if ($('.product-single__thumbnail').hasClass('active-thumb') && color_img.hasClass('active-thumb')){
          $('.product-single__thumbnail').removeClass('active-thumb');
          color_img.removeClass('active-thumb');
        } else {
          color_img.addClass('active-thumb');
        }        
      });  

      var colorvariant_img = $('.product-single__thumbnails-item').find('.active-thumb').find('.product-single__thumbnail-image').attr('data-image');
      $('.feature-row__image').attr('srcset' , colorvariant_img);
      $('.product-single__media').find('.zoomImg').attr('src' , colorvariant_img);

    });

});  
// end  

// Product Thumbnail Image Chnage Start  
$('.product-single__thumbnail-image').click(function(){
    var variant_img = jQuery(this).attr('data-image');
      $('.feature-row__image').attr('srcset' , variant_img);
      $('.product-single__media').find('.zoomImg').attr('src' , variant_img);
});
// End 

// variable define
  var $wtdItems      = [];
  var $wtdFormData   = {};
  var $invent_arr    = [];
  var $invent_arrpck = [];
  var $max_val_all   = 0;
  var $ttl_pack      = 0;
  

  // Start This function for indiviual onchange pack button
  function chkIsMatch($items, $wtd_id, $pck_unit) {
    const $isMatch = $items.some(element => {
      if (element.id === $wtd_id) {
        return $wtd_id;
      } else {
        return false;
      }
    });

    if($isMatch) {
      $wtdItems.forEach((element, index, items_arr) => {
        if($isMatch == true && element.id == $wtd_id) {
          $wtdItems[index].quantity = $pck_unit;
        }
      });

    } else {
      $items.push({'id': $wtd_id, 'quantity': $pck_unit});
    }
    return $items
  }
  
  $(document).ready(function() {
    var productIds={};
    $(".row_size_span").each(function($i_val, $val_html) {
     
    	var newvalue = $(this).attr('data-wtd-name');
        if(productIds[newvalue]){
          $(this).prev().remove();
           $(this).remove();
          
        }else{
           productIds[newvalue] = true;
        }
    })
    $(".wtd_submit_atc").attr("disabled","disabled");
    
    $("input[name=product-pack-quantity]").on("change", function(e) {
      e.preventDefault();
      
      var $maxVals = $(this).parent().prev().children('.row_size_span').attr('data-wtd-max-qty');
      $(this).attr({ "max" : $maxVals, "min" : 0 });
      var $product_price    = $(".product__price .price__regular span span").text().split(" ");
      var $money_symbol     = $product_price[0];
          $money_symbol = $money_symbol.substring(0, 1);
      var $specific_invt_arr= [];
      var $max_val_qty_arr  = [];
      var $wtd_vari_pc_arr  = [];
      var $ttl_qty_attr_arr = [];
      var $qty_units        = 0;
      var $total_qty_pack   = 0;
      var $total_qty_units  = 0;
      var $total_qty_amount = 0;
      var $wtd_vari_pc      = 0;
      var $row_price        = 0;
      var $this_obj         = $(this);
      var $current_qty      = $(this).val();
      var $data_row_id      = $(this).attr("data-row");
      // $(".error_msg").remove();
      var $qty_row;
      
      
      $(".row_"+$data_row_id+" a").each(function($idx, $val_html_money) {
      
        $wtd_vari_pc = parseFloat($(this).siblings('.row_size_span_money ').text().replace(/[^0-9.]/g, ""));
   
        if(!$.inArray($idx, $wtd_vari_pc_arr) !== -1){
          $wtd_vari_pc_arr[$idx] = parseFloat($wtd_vari_pc);
        }
      });
      
      // function getSum(test){
      //     var output = 0;
      //     $('.row_'+test+' td.row_size_td').children('a').each(function () {
      //       output += parseInt(this.innerHTML); // "this" is the current element in the loop
      //     });
      //     return output;
      //   }
      //   var out=getSum();

        var totalQTY = 0;
      $(".row_"+$data_row_id+" a").each(function($i_val, $val_html) {
        // var $wtd_id =$(this).siblings('.row_size_span').attr("data-wtd-id");
        var $node_count  = $(".row_"+$data_row_id+" a").length -1;
        var $wtd_qty_ttl = parseInt($(this).siblings('.row_size_span').attr("data-wtd-quantity"));
       
     var $wtd_qty_ttlpck = parseInt($(this).siblings('.row_size_span').attr("data-wtd-max-qty"));
    //  console.log('wtd_qty_ttlpck: '+$wtd_qty_ttlpck);
        var $wtd_max_qty = $(this).siblings('.row_size_span').attr("data-wtd-max-qty");
        // console.log('wtd_max_qty: '+$wtd_max_qty);
        var $wtd_var_qty = $($val_html).attr("const-qty");
        // console.log('wtd_var_qty: '+$wtd_var_qty);
        
        $qty_row = parseInt($current_qty) * $wtd_var_qty;
        // console.log($wtd_var_qty+','+$current_qty)
 
        if(jQuery.inArray($wtd_qty_ttl, $invent_arr) !== -1) {} else { $invent_arr.push($wtd_qty_ttl); }
        
        if(jQuery.inArray($wtd_qty_ttlpck, $invent_arrpck) !== -1) {} else { $invent_arrpck.push($wtd_qty_ttlpck); }
        
        $specific_invt_arr.push($wtd_qty_ttl);
        $max_val_qty_arr.push($wtd_max_qty);
      //  console.log($wtd_max_qty);
        // if(parseInt($max_val_all) < parseInt($wtd_max_qty)) {
          $max_val_all = $wtd_max_qty;
        // }

          // if($wtd_qty_ttl < $qty_row) {
          //   console.log('55555555555555555555555555555555555555');
          //   var $max_val_qty = Math.max(...$max_val_qty_arr);
          //   $($val_html).text($wtd_qty_ttl);
          //   $wtdItems = chkIsMatch($wtdItems, $wtd_id, $wtd_qty_ttl);
          //   if($i_val == $node_count) {
          //     console.log('88888888888888888888888888888888');
          //     if($current_qty > $max_val_qty) {
          //       console.log('77777777777777777777777777777');
          //       $this_obj.val($max_val_qty);
          //       $qty_units = parseInt($qty_units) + parseInt($($val_html).text());
          //       if($qty_units  < $max_val_all){
          //         console.log('111111111111111111111111111111111');
          //       }else{
          //         console.log('2222222222222222222222222');
          //       }
          //       $row_price = $row_price + ($wtd_qty_ttl * $wtd_vari_pc_arr[$i_val]);                
          //       return false;
          //     }
          //   } else {
          //     $row_price = $row_price + ($wtd_qty_ttl * $wtd_vari_pc_arr[$i_val]);

          //   }
          // } else {
            console.log('666666666666666666666');
       
            totalQTY += parseInt($qty_row);
          // console.log($wtd_id);
          // console.log($wtdItems);
        
            // console.log( $wtdItems);
            $row_price = parseFloat($row_price) + ($qty_row * parseFloat($wtd_vari_pc_arr[$i_val])); 
            
          // }
          
            $($val_html).attr("ttl-qty", $qty_row);
          
      });
      console.log($max_val_all);
      if(totalQTY  < $max_val_all){
        $(".row_"+$data_row_id+" a").each(function($i, $html) {
          var ttl_qty = $($html).attr("ttl-qty");
          $($html).text(ttl_qty);
          $qty_units = parseInt($qty_units) + parseInt($($html).text());
        })
        // var $max_val_arr = Math.max.apply(Math, $invent_arr);
        // var $max_val_arrpck = Math.max.apply(Math, $invent_arrpck);
              
        // var $spec_max_val_arr = Math.max(...$specific_invt_arr);
        // if($qty_row > $spec_max_val_arr) {
        // }
      // console.log($current_qty+','+$max_val_arrpck);
      // $(".row_"+$data_row_id+" .row_size_span").each(function($i_val, $val_html) {
      //   // console.log($max_val_all);
      //   if($current_qty > parseInt($($val_html).attr('data-wtd-max-qty'))){

          
      //     $("<p class='error_msg' style='color: #ff0000c7; font-size: 12px; margin: 0; position: absolute; bottom: 0; right: 0;'>AVAILABLE PACK: "+ $max_val_all +"</p>").insertAfter($(this));
      //     $("#change_qty_all").val($max_val_all);
      //     if(parseInt($($val_html).attr('data-wtd-max-qty')) > $current_qty){
      //       // console.log($("#change_qty_all").val());
      //     $(this).parent().next().children('.row_qty_input').attr("disabled","disabled");
      //   }

      //   }
      // })

      //   console.log($wtdItems);
        
      // $wtdFormData = {
      //   'items': $wtdItems
      // }
      // console.log($wtdFormData);
                  
          $(".row_"+$data_row_id+" .row_units_td span").text($qty_units);
          $(".row_"+$data_row_id+" .row_price_td .currency_symbol_wtd").text($money_symbol);
          $(".row_"+$data_row_id+" .row_price_td .row_total").text($row_price.toFixed(2));
          $('.row_qty_input').each(function (index, value) {
            if ($(this).val() != "")
              $total_qty_pack = $total_qty_pack + parseInt($(this).val());
          });
          $('.row_units_td span').each(function (index, value) {
            if ($(this).text() != "")
              $total_qty_units = $total_qty_units + parseInt($(this).text());
          });
          $('.row_price_td .row_total').each(function (index, value) {
            if ($(this).text() != "") {
              $total_qty_amount = $total_qty_amount + parseFloat($(this).text());
            }
          });
          $(".total_pack").text(parseInt($total_qty_pack));
          $(".total_qty").text(parseInt($total_qty_units)+" Units");
          $(".final_price").text($money_symbol+""+$total_qty_amount.toFixed(2));
      
          var totalPack = parseInt($('.total_pack').text());
          if(totalPack > 0) {
          	$('.wtd_submit_atc').removeAttr("disabled");
          }else{
          	$('.wtd_submit_atc').attr("disabled","disabled");
          }
          console.log($ttl_pack);
          console.log($current_qty);
          $this_obj.attr("data-pack", $current_qty);
        }else{ 
          $(".row_"+$data_row_id+" a").each(function($i, $html) {
            var ttl_qty = $($html).text();
            $($html).attr("ttl-qty", ttl_qty);
          })
          var data_pack = $this_obj.attr("data-pack");
          $this_obj.val(data_pack);
          $this_obj.next().text("AVAILABLE PACK: "+ data_pack);
          $this_obj.next().css("display", "block");
          console.log('444444444444444444444444444');
        }
      
      // assessum($(this).parent().parent().attr('class'),$(this).attr('max'),$(this));
    });
  })
  function assessum(values,attributes,current){
    let text1 = ".";
    let totalVal = 0;
    $('.'+values+" .row_size_td a").each(function($idx, $val_html_money) {
        totalVal += (parseInt($(this).text()) || 0);
        
      });
      if(totalVal>=attributes){
        current.attr("disabled","disabled");
        console.log();
      }
  }
// end on change
  
// 	 start atc
  $(".wtd_submit_atc").on("click", function() {
    var $items = [];    
    $(".row_units").each(function($idx, $item_html) {
      $items.push({'id': $($item_html).attr("data-wtd-vari-id"), 'quantity': $($item_html).text() });
    });
    console.log($items);
    $wtdFormData = {
      'items': $items
    }
    console.log($wtdFormData);
    var wtd_count_obj = Object.keys($wtdFormData).length;
    // console.log($wtdFormData);
    var totalPack = parseInt($('.total_pack').text());

    if(wtd_count_obj && parseInt($('.total_pack').text()) > 0) {
      fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify($wtdFormData)
      })
      .then(response => {
        var sucess_obj = response.json();
        $('.cart_success_msg').remove();
        if(sucess_obj){
          $('.wtd_submit_atc').after('<span class="cart_success_msg"> Items Added to Cart </span>');
          // window.location.href = window.Shopify.routes.root + 'cart/';
          //  localStorage.setItem("mytime", Date.now());
          setTimeout(function(){
            $('.cart_success_msg').remove();
          }, 5000);
        }
      })
      .catch((error) => {
        console.error('Error:', error);
      });
      
    } else {    
    console.log('Please add Item');   
    
    }
    
  });
// end start atc
  
// Start This function for common onchange pack button  
  $("#change_qty_all").on('change', function() {
    var all_qty = $(this).val(); // Taking the value of main btn
      $('input.row_qty_input').val(all_qty); // changing the value of inner pack btn
      $('input.row_qty_input').trigger('change'); // trigger the chnages in all indiviual btn
 
  });
//  end 



</script>  







{% schema %}
{
"name": {
"cs": "Stránky produktů",
"da": "Produktsider",
"de": "Produktseiten",
"en": "Product pages",
"es": "Páginas de productos",
"fi": "Tuotesivut",
"fr": "Pages de produits",
"it": "Pagine di prodotto",
"ja": "商品ページ",
"ko": "제품 페이지",
"nb": "Produktsider",
"nl": "Productpagina's",
"pl": "Strony produktu",
"pt-BR": "Páginas de produtos",
"pt-PT": "Páginas de produtos",
"sv": "Produktsidor",
"th": "หน้าสินค้า",
"tr": "Ürün sayfaları",
"vi": "Trang sản phẩm",
"zh-CN": "产品页面",
"zh-TW": "產品頁面"
},
"settings": [
{
"type": "checkbox",
"id": "show_quantity_selector",
"label": {
"cs": "Zobrazit výběr množství",
"da": "Vis antalsvælger",
"de": "Mengenauswahl anzeigen",
"en": "Show quantity selector",
"es": "Mostrar selector de cantidad",
"fi": "Näytä määrän valitsin",
"fr": "Afficher le sélecteur de quantité",
"it": "Mostra selettore quantità",
"ja": "数量セレクターを表示する",
"ko": "수량 선택기 표시",
"nb": "Vis mengdevelger",
"nl": "Hoeveelheidskiezer weergeven",
"pl": "Pokaż selektor ilości",
"pt-BR": "Exibir seletor de quantidade",
"pt-PT": "Mostrar um seletor de quantidade",
"sv": "Visa kvantitetsväljare",
"th": "แสดงตัวเลือกจำนวน",
"tr": "Adet seçiciyi göster",
"vi": "Hiển thị hộp chọn số lượng",
"zh-CN": "显示数量选择器",
"zh-TW": "顯示數量選擇器"
},
"default": false
},
{
"type": "checkbox",
"id": "show_vendor",
"label": {
"cs": "Zobrazit dodavatele",
"da": "Vis leverandør",
"de": "Lieferanten anzeigen",
"en": "Show vendor",
"es": "Mostrar proveedor",
"fi": "Näytä myyjä",
"fr": "Afficher les vendeurs",
"it": "Mostra fornitore",
"ja": "販売元を表示する",
"ko": "공급업체 표시",
"nb": "Vis leverandør",
"nl": "Leverancier weergeven",
"pl": "Pokaż dostawcę",
"pt-BR": "Exibir fornecedor",
"pt-PT": "Mostrar fornecedor",
"sv": "Visa säljare",
"th": "แสดงผู้ขาย",
"tr": "Satıcıyı göster",
"vi": "Hiển thị nhà cung cấp",
"zh-CN": "显示厂商",
"zh-TW": "顯示廠商"
},
"default": false
},
{
"type": "checkbox",
"id": "enable_payment_button",
"label": {
"cs": "Zobrazit dynamické tlačítko pokladny",
"da": "Vis dynamisk betalingsknap",
"de": "Dynamischen Checkout Button anzeigen",
"en": "Show dynamic checkout button",
"es": "Mostrar botón de pago dinámico",
"fi": "Näytä dynaaminen kassapainike",
"fr": "Afficher le bouton de paiement dynamique",
"it": "Mostra pulsante di check-out dinamico",
"ja": "動的チェックアウトボタンを表示する",
"ko": "동적 결제 버튼 표시",
"nb": "Vis dynamisk knapp for å gå til kassen",
"nl": "Dynamische betaalknop weergeven",
"pl": "Pokaż dynamiczny przycisk realizacji zakupu",
"pt-BR": "Exibir botão de checkout dinâmico",
"pt-PT": "Mostrar o botão dinâmico de finalização da compra",
"sv": "Visa dynamiska utcheckningsknappar",
"th": "แสดงปุ่มชำระเงินแบบไดนามิก",
"tr": "Dinamik ödeme düğmesini göster",
"vi": "Hiển thị nút thanh toán động",
"zh-CN": "显示动态结账按钮",
"zh-TW": "顯示動態結帳按鈕"
},
"info": {
"cs": "Každý zákazník uvidí platební metodu, kterou ze všech metod dostupných v obchodě (například PayPal nebo Apple Pay) nejvíce preferuje. [Další informace](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"da": "Den enkelte kunde vil se sin foretrukne betalingsmetode blandt dem, der er tilgængelige i din butik, f.eks. PayPal eller Apple Pay. [Få mere at vide](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"de": "Jeder Kunde sieht seine bevorzugte Zahlungsmethode aus den in deinem Shop verfügbaren Zahlungsmethoden wie PayPal oder Apple Pay. [Mehr Informationen](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"en": "Each customer will see their preferred payment method from those available on your store, such as PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"es": "Cada cliente verá su forma de pago preferida entre las disponibles en tu tienda, como PayPal o Apple Pay. [Más información](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"fi": "Kukin asiakas näkee ensisijaisen valintansa kauppasi tarjoamista maksutavoista, esim. PayPal tai Apple Pay. [Lisätietoja](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"fr": "Chaque client verra son moyen de paiement préféré parmi ceux qui sont proposés sur votre boutique, tels que PayPal ou Apple Pay. [En savoir plus](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"it": "Ogni cliente vedrà il suo metodo di pagamento preferito tra quelli disponibili nel tuo negozio, come PayPal o Apple Pay. [Maggiori informazioni](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"ja": "PayPalやApple Payなど、ストアで利用可能な希望の決済方法がお客様に表示されます。[詳しくはこちら](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"ko": "각 고객은 PayPal 또는 Apple Pay와 같이 스토어에서 사용 가능한 지불 방법을 확인할 수 있습니다. [자세히 알아보기](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"nb": "Hver enkelt kunde vil se sin foretrukne betalingsmåte blant de som er tilgjengelig i butikken din, som PayPal eller Apple Pay. [Finn ut mer](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"nl": "Elke klant ziet zijn of haar beschikbare voorkeursmethode om af te rekenen, zoals PayPal of Apple Pay. [Meer informatie](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"pl": "Każdy klient zobaczy swoją preferowaną metodę płatności wśród metod dostępnych w Twoim sklepie, np. PayPal lub Apple Pay. [Dowiedz się więcej](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"pt-BR": "Cada cliente verá a forma de pagamento preferencial dele dentre as disponíveis na loja, como PayPal ou Apple Pay. [Saiba mais](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"pt-PT": "Cada cliente irá ver o seu método de pagamento preferido entre os disponíveis na loja, como o PayPal ou Apple Pay. [Saiba mais](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"sv": "Varje kund kommer att se den föredragna betalningsmetoden från de som finns tillgängliga i din butik, till exempel PayPal eller Apple Pay. [Läs mer](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"th": "ลูกค้าแต่ละรายจะเห็นวิธีการชำระเงินที่ต้องการจากวิธีที่ใช้ได้ในร้านค้าของคุณ เช่น PayPal หรือ Apple Pay [ดูข้อมูลเพิ่มเติม](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"tr": "Her müşteri, mağazanız sunulanlar arasından tercih ettikleri ödeme yöntemini görür (ör. PayPal veya Apple Pay). [Daha fazla bilgi edinin](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"vi": "Mỗi khách hàng sẽ thấy phương thức thanh toán ưu tiên trong những phương thức thanh toán được hỗ trợ tại cửa hàng như PayPal hoặc Apple Pay. [Tìm hiểu thêm](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"zh-CN": "每位客户都可在您商店提供的付款方式中看到他们的首选付款方式，例如 PayPal 或 Apple Pay。[了解详细信息](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
"zh-TW": "每位顧客都可以在您商店內開放使用的付款方式中看見他們偏好使用的方式，如 PayPal、Apple Pay 等。[深入瞭解](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)"
},
"default": true
},
{
"type": "checkbox",
"id": "show_share_buttons",
"label": {
"cs": "Zobrazit tlačítka pro sdílení na sociálních sítích",
"da": "Vis knapper til deling på sociale medier",
"de": "Buttons für Social Media anzeigen",
"en": "Show social sharing buttons",
"es": "Mostrar botones para compartir en redes sociales",
"fi": "Näytä sosiaalisen median jakamispainikkeet",
"fr": "Affichez les boutons de partage sur les médias sociaux",
"it": "Mostra i pulsanti per la condivisione sui social",
"ja": "ソーシャルメディアでの共有ボタンを表示する",
"ko": "소셜 공유 버튼 표시",
"nb": "Vis knapper for deling på sosiale medier",
"nl": "Knoppen voor sociaal delen weergeven",
"pl": "Pokaż przyciski udostępniania w mediach społecznościowych",
"pt-BR": "Exibir botões de compartilhamento em redes sociais",
"pt-PT": "Mostrar botões de partilha nas redes sociais",
"sv": "Visa knappar för delning i sociala medier",
"th": "แสดงปุ่มสำหรับแชร์ลงโซเชียล",
"tr": "Sosyal medya paylaşım düğmelerini göster",
"vi": "Hiển thị nút chia sẻ qua mạng xã hội",
"zh-CN": "显示社交分享按钮",
"zh-TW": "顯示社群分享按鈕"
},
"default": true
},
{
"type": "header",
"content": {
"cs": "Multimédia",
"da": "Medie",
"de": "Medien",
"en": "Media",
"es": "Elementos multimedia",
"fi": "Media",
"fr": "Support multimédia",
"it": "Media",
"ja": "メディア",
"ko": "미디어",
"nb": "Medier",
"nl": "Media",
"pl": "Multimedia",
"pt-BR": "Mídia",
"pt-PT": "Multimédia",
"sv": "Media",
"th": "สื่อ",
"tr": "Medya",
"vi": "Nội dung đa phương tiện",
"zh-CN": "媒体",
"zh-TW": "媒體"
},
"info": {
"cs": "Další informace o [typech multimédií](https://help.shopify.com/manual/products/product-media)",
"da": "Få mere at vide om [media types](https://help.shopify.com/manual/products/product-media)",
"de": "Mehr Informationen über [Medientypen ](https://help.shopify.com/manual/products/product-media)",
"en": "Learn more about [media types](https://help.shopify.com/manual/products/product-media)",
"es": "Más información sobre [tipos de archivos multimedia](https://help.shopify.com/manual/products/product-media)",
"fi": "Lue lisää [mediatyypeistä](https://help.shopify.com/manual/products/product-media)",
"fr": "En savoir plus sur les [types de supports multimédia](https://help.shopify.com/manual/products/product-media)",
"it": "Scopri di più sulle [tipologie di file multimediali](https://help.shopify.com/manual/products/product-media)",
"ja": "[メディアのタイプ](https://help.shopify.com/manual/products/product-media) について詳しくはこちら",
"ko": "[미디어 유형](https://help.shopify.com/manual/products/product-media)에 대해 자세히 알아보기",
"nb": "Lær mer om [medietyper](https://help.shopify.com/manual/products/product-media)",
"nl": "Meer informatie over [mediatypen](https://help.shopify.com/manual/products/product-media)",
"pl": "Dowiedz się więcej o [typach multimediów](https://help.shopify.com/manual/products/product-media)",
"pt-BR": "Saiba mais sobre [tipos de mídia](https://help.shopify.com/manual/products/product-media)",
"pt-PT": "Saiba mais sobre [media types](https://help.shopify.com/manual/products/product-media)",
"sv": "Läs mer om [mediatyper](https://help.shopify.com/manual/products/product-media)",
"th": "ดูข้อมูลเพิ่มเติมเกี่ยวกับ [ประเภทของสื่อ](https://help.shopify.com/manual/products/product-media)",
"tr": "[Medya türleri](https://help.shopify.com/manual/products/product-media) hakkında daha fazla bilgi edinin",
"vi": "Tìm hiểu thêm về [loại phương tiện](https://help.shopify.com/manual/products/product-media)",
"zh-CN": "详细了解[媒体类型](https://help.shopify.com/manual/products/product-media)",
"zh-TW": "深入瞭解 [媒體類型](https://help.shopify.com/manual/products/product-media)"
}
},
{
"type": "select",
"id": "media_size",
"label": {
"cs": "Velikost",
"da": "Størrelse",
"de": "Größe",
"en": "Size",
"es": "Tamaño",
"fi": "Koko",
"fr": "Taille",
"it": "Dimensione",
"ja": "サイズ",
"ko": "사이즈",
"nb": "Størrelse",
"nl": "Grootte",
"pl": "Rozmiar",
"pt-BR": "Tamanho",
"pt-PT": "Tamanho",
"sv": "Storlek",
"th": "ขนาด",
"tr": "Boyut",
"vi": "Cỡ",
"zh-CN": "大小",
"zh-TW": "尺寸"
},
"options": [
{
"value": "small",
"label": {
"cs": "Malá",
"da": "Lille",
"de": "Klein",
"en": "Small",
"es": "Pequeño",
"fi": "Pieni",
"fr": "Petit",
"it": "Piccolo",
"ja": "スモール",
"ko": "스몰",
"nb": "Liten",
"nl": "Klein",
"pl": "Mały",
"pt-BR": "Pequeno",
"pt-PT": "Pequeno",
"sv": "Liten",
"th": "เล็ก",
"tr": "Küçük",
"vi": "Nhỏ",
"zh-CN": "小",
"zh-TW": "小型"
}
},
{
"value": "medium",
"label": {
"cs": "Střední",
"da": "Medium",
"de": "Mittel",
"en": "Medium",
"es": "Mediano",
"fi": "Keskisuuri",
"fr": "Moyenne",
"it": "Medio",
"ja": "中",
"ko": "보통",
"nb": "Middels",
"nl": "Gemiddeld",
"pl": "Średni",
"pt-BR": "Médio",
"pt-PT": "Médio",
"sv": "Medium",
"th": "ปานกลาง",
"tr": "Orta",
"vi": "Trung bình",
"zh-CN": "中等",
"zh-TW": "中等"
}
},
{
"value": "large",
"label": {
"cs": "Velká",
"da": "Stor",
"de": "Groß",
"en": "Large",
"es": "Grande",
"fi": "Suuri",
"fr": "Grande",
"it": "Grande",
"ja": "大",
"ko": "라지",
"nb": "Stor",
"nl": "Groot",
"pl": "Duży",
"pt-BR": "Grande",
"pt-PT": "Grande",
"sv": "Stor",
"th": "ใหญ่",
"tr": "Büyük",
"vi": "Lớn",
"zh-CN": "大",
"zh-TW": "大型"
}
},
{
"value": "full",
"label": {
"cs": "Plná šířka",
"da": "Fuld bredde",
"de": "Volle Breite",
"en": "Full-width",
"es": "Ancho completo",
"fi": "Täysi leveys",
"fr": "Pleine largeur",
"it": "Intera larghezza",
"ja": "全幅",
"ko": "전체 폭",
"nb": "Full bredde",
"nl": "Volledige breedte",
"pl": "Pełna szerokość",
"pt-BR": "Largura completa",
"pt-PT": "Largura completa",
"sv": "Full bredd",
"th": "เต็มความกว้าง",
"tr": "Tam genişlikli",
"vi": "Độ rộng đầy đủ",
"zh-CN": "全宽",
"zh-TW": "完整寬度"
}
}
],
"default": "medium"
},
{
"type": "checkbox",
"id": "enable_image_zoom",
"label": {
"cs": "Povolit zvětšení obrázku",
"da": "Aktivér billedzoom",
"de": "Foto-Zoom zulassen",
"en": "Enable image zoom",
"es": "Habilitar zoom de imagen",
"fi": "Ota kuvan zoomaus käyttöön",
"fr": "Activer le zoom d'image",
"it": "Abilita lo zoom dell'immagine",
"ja": "画像ズームを有効にする",
"ko": "이미지 확대 사용",
"nb": "Aktiver bildezoom",
"nl": "Inzoomen op afbeelding inschakelen",
"pl": "Włącz powiększenie obrazu",
"pt-BR": "Habilitar o zoom da imagem",
"pt-PT": "Ativar o zoom da imagem",
"sv": "Aktivera bildzoom",
"th": "เปิดใช้การซูมภาพ",
"tr": "Görsel yakınlaştırmayı etkinleştir",
"vi": "Bật thu phóng hình ảnh",
"zh-CN": "启用图片缩放",
"zh-TW": "啟用圖片縮放"
},
"default": true
},
{
"type": "checkbox",
"id": "enable_video_looping",
"label": {
"cs": "Povolit smyčky videa",
"da": "Aktivér looping af videoer",
"de": "Videoschleife aktivieren",
"en": "Enable video looping",
"es": "Habilitar la reproducción de video en bucle",
"fi": "Ota käyttöön videosilmukka",
"fr": "Activer le bouclage de la vidéo",
"it": "Abilita la riproduzione in loop dei video",
"ja": "ビデオのループを有効にする",
"ko": "동영상 루프",
"nb": "Aktiver løkkeavspilling av video",
"nl": "Video-looping inschakelen",
"pl": "Włącz zapętlanie wideo",
"pt-BR": "Habilitar loop de vídeo",
"pt-PT": "Ativar ciclo de vídeo",
"sv": "Aktivera video-loopning",
"th": "เปิดใช้การวนซ้ำวิดีโอ",
"tr": "Video döngüsünü etkinleştir",
"vi": "Bật vòng lặp video",
"zh-CN": "启用视频循环",
"zh-TW": "啟用影片循環功能"
},
"default": false
}
]
}
{% endschema %}
